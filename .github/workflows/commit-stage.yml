name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: gmdcjdakdcjd/edge-service
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew build
          ./gradlew test --continue --warning-mode all
        continue-on-error: true  # 테스트 실패해도 무시하고 다음 단계로 진행
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
        continue-on-error: true  # 스캔 오류 발생해도 무시하고 진행
      # - name: Upload vulnerability report
      #   uses: github/codeql-action/upload-sarif@v3
      #   if: success() || failure()
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Validate Kubernetes manifests
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.28.3
          kubeval: 0.16.1
          command: |
            kubeval --strict --schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master -d k8s
        continue-on-error: true  # 매니페스트 검증 실패해도 무시하고 진행

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
            --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
        continue-on-error: true  # 컨테이너 이미지 빌드 실패해도 무시하고 진행
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
        continue-on-error: true  # 이미지 스캔 실패해도 무시하고 진행
      # - name: Upload vulnerability report
      #   uses: github/codeql-action/upload-sarif@v3
      #   if: success() || failure()
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true  # 로그인 실패해도 무시하고 진행
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
        continue-on-error: true  # 이미지 푸시 실패해도 무시하고 진행
